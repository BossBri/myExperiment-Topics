<%  
# this partial renders a tabnav, you can call it in your views with:
#   <%= tabnav :user % > (just the tabnav) 
# or, if you want a boxed tabnav:
#   <% tabnav :user do % >
#     your html here
#   <% end % >
# (remove the space between % and >, we don't want to mess up your brand new tabnav :-))
#
# you can pass render_tabnav a few options:
#   :generate_css => true|false #=> generates a default inline css for the tabnav, defaults to false
#   :html => aHash #=> sets html options for the tabnav's div (es :html => {:class=> 'myCssClass', :id=>'myCssId'}) 
#     
render_tabnav :user, 
              :generate_css => false,
							:html => {:id => 'user_tabnav', :class => 'tabnav2'} do 
    
  # this generates a tab for every controller in your app
  # you'll probably want to delete this and
  # add tabs one by one as shown below
# controller_names.each do |name|
#   add_tab do |t|
#     t.named name.camelize
#     t.titled "Go to #{name.camelize}"
#     t.links_to :controller => name
#   end
# end 

  add_tab do |t|
    t.named 'News'
    t.titled 'News'
    t.links_to :action => 'news', :id => @user.id
		t.highlights_on :action => 'show', :id => @user.id
  end 
         
  unless @user.friends.empty?
    add_tab do |t|
      t.named 'Friends'
      t.titled 'Friends'
      t.links_to :action => 'friends', :id => @user.id
    end 
  end

  unless @user.networks_owned.empty? and @user.networks.empty?
    add_tab do |t|
      t.named 'Groups'
      t.titled 'Groups'
      t.links_to :action => 'groups', :id => @user.id
    end 
  end

  filter_contributables(@user.contributions).each do |klass,contributables|
    add_tab do |t|
      t.named controller_visible_name(klass.humanize.pluralize)
      t.titled controller_visible_name(klass.humanize.pluralize)
      t.links_to :action => controller_visible_name(klass.humanize.pluralize).downcase, :id => @user.id
    end
  end
         
  add_tab do |t|
    t.named 'Credits'
    t.titled 'Credits'
    t.links_to :action => 'credits', :id => @user.id
  end 
         
  add_tab do |t|
    t.named 'Tags by User'
    t.titled 'Tags by User'
    t.links_to :action => 'tags', :id => @user.id
  end

	add_tab do |t|
    t.named 'Favourites'
    t.titled 'Favourites'
    t.links_to :action => 'favourites', :id => @user.id
  end 

  #add_tab do |t|
  #  t.named 'Home'
  #  t.titled 'Home Page'
  #  t.links_to :controller => 'welcome'
  #end 
  #  
  # you can use restful routes with:
  #
  #add_tab do |t|
  #  t.named 'Users'
  #  t.links_to hash_for_users_path
  #end
  #
  #add_tab do |t|
  #  t.named 'Customers'
  #  t.links_to :controller => 'customers'
  #end
  #  
  # # A tab can be initialized with a Hash like this:
  # 
  # add_tab :name => 'welcome', :link => {:controller=>'welcome'}
  #
  # # You can have a dynamic name or link 
  # # (this partial is evaluated in the page context, so it sees every helper or instance variable)
  #  
  # add_tab do |t|
  #   t.named "#{current_user} details"
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
  #
  # # You can have an image inside 
  #
  # add_tab do |t|
  #   t.named image_tag('test')
  #   t.links_to :controller => 'users', :action => 'show', :id => current_user.id
  # end
end 
%>
